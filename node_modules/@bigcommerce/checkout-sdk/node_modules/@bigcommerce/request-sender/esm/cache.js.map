{"version":3,"file":"cache.js","sourceRoot":"","sources":["../src/cache.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,WAAW,MAAM,cAAc,CAAC;AAc5C;IAAA;QACqB,WAAM,GAAa,EAAE,CAAC;IAqB3C,CAAC;IAnBG,2BAAI,GAAJ,UAAQ,GAAW,EAAE,OAAuB;QACxC,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;IACzC,CAAC;IAED,4BAAK,GAAL,UAAS,GAAW,EAAE,OAAuB,EAAE,QAAqB;QAChE,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAElD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;IACrC,CAAC;IAEO,6BAAM,GAAd,UAAe,GAAW,EAAE,MAAmB;QAAnB,uBAAA,EAAA,WAAmB;QAC3C,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,OAAO,GAAG,CAAC;SACd;QAED,OAAU,GAAG,SAAI,WAAW,CAAC,SAAS,CAAC,MAAM,CAAG,CAAC;IACrD,CAAC;IACL,mBAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import * as queryString from 'query-string';\n\nimport RequestOptions from './request-options';\nimport Response from './response';\n\nexport default interface Cache {\n    read<T>(url: string, options: RequestOptions): Response<T> | null;\n    write<T>(url: string, options: RequestOptions, response: Response<T>): void;\n}\n\ninterface CacheMap {\n    [key: string]: Response<any>;\n}\n\nexport class DefaultCache implements Cache {\n    private readonly _cache: CacheMap = {};\n\n    read<T>(url: string, options: RequestOptions): Response<T> | null {\n        const cacheKey = this.getKey(url, options.params);\n\n        return this._cache[cacheKey] || null;\n    }\n\n    write<T>(url: string, options: RequestOptions, response: Response<T>) {\n        const cacheKey = this.getKey(url, options.params);\n\n        this._cache[cacheKey] = response;\n    }\n\n    private getKey(url: string, params: object = {}) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n\n        return `${url}?${queryString.stringify(params)}`;\n    }\n}\n"]}