{"version":3,"file":"cache.js","sourceRoot":"","sources":["../src/cache.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,WAAW,MAAM,cAAc,CAAC;AAc5C,MAAM,OAAO,YAAY;IAAzB;QACqB,WAAM,GAAa,EAAE,CAAC;IAqB3C,CAAC;IAnBG,IAAI,CAAI,GAAW,EAAE,OAAuB;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;IACzC,CAAC;IAED,KAAK,CAAI,GAAW,EAAE,OAAuB,EAAE,QAAqB;QAChE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAElD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;IACrC,CAAC;IAEO,MAAM,CAAC,GAAW,EAAE,SAAiB,EAAE;QAC3C,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,OAAO,GAAG,CAAC;SACd;QAED,OAAO,GAAG,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;IACrD,CAAC;CACJ","sourcesContent":["import * as queryString from 'query-string';\n\nimport RequestOptions from './request-options';\nimport Response from './response';\n\nexport default interface Cache {\n    read<T>(url: string, options: RequestOptions): Response<T> | null;\n    write<T>(url: string, options: RequestOptions, response: Response<T>): void;\n}\n\ninterface CacheMap {\n    [key: string]: Response<any>;\n}\n\nexport class DefaultCache implements Cache {\n    private readonly _cache: CacheMap = {};\n\n    read<T>(url: string, options: RequestOptions): Response<T> | null {\n        const cacheKey = this.getKey(url, options.params);\n\n        return this._cache[cacheKey] || null;\n    }\n\n    write<T>(url: string, options: RequestOptions, response: Response<T>) {\n        const cacheKey = this.getKey(url, options.params);\n\n        this._cache[cacheKey] = response;\n    }\n\n    private getKey(url: string, params: object = {}) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n\n        return `${url}?${queryString.stringify(params)}`;\n    }\n}\n"]}