{"version":3,"sources":["../../src/payment/payment-submitter.js"],"names":["PaymentSubmitter","config","urlHelper","UrlHelper","create","requestSender","RequestSender","payloadMapper","PayloadMapper","data","callback","paymentMethod","type","API","Error","payload","mapToPayload","url","getPaymentUrl","options","headers","mapToHeaders","postRequest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,gB;;;;AACjB;AACJ;AACA;AACA;2BACkBC,M,EAAQ;AAClB,UAAMC,SAAS,GAAGC,mBAAUC,MAAV,CAAiBH,MAAjB,CAAlB;;AACA,UAAMI,aAAa,GAAGC,uBAAcF,MAAd,EAAtB;;AACA,UAAMG,aAAa,GAAGC,uBAAcJ,MAAd,EAAtB;;AAEA,aAAO,IAAIJ,gBAAJ,CAAqBE,SAArB,EAAgCG,aAAhC,EAA+CE,aAA/C,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;AACI,4BAAYL,SAAZ,EAAuBG,aAAvB,EAAsCE,aAAtC,EAAqD;AAAA;;AACjD;AACR;AACA;AACA;AACQ,SAAKL,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;AACA;;AACQ,SAAKG,aAAL,GAAqBA,aAArB;AAEA;AACR;AACA;AACA;;AACQ,SAAKE,aAAL,GAAqBA,aAArB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;;kCACkBE,I,EAAMC,Q,EAAU;AAAA,gCACKD,IADL,CAClBE,aADkB;AAAA,UAClBA,aADkB,oCACF,EADE;;AAG1B,UAAIA,aAAa,CAACC,IAAd,KAAuBC,iBAA3B,EAAgC;AAC5B,cAAM,IAAIC,KAAJ,WAAaH,aAAa,CAACC,IAA3B,wBAAN;AACH;;AAED,UAAMG,OAAO,GAAG,KAAKR,aAAL,CAAmBS,YAAnB,CAAgCP,IAAhC,CAAhB;AACA,UAAMQ,GAAG,GAAG,KAAKf,SAAL,CAAegB,aAAf,EAAZ;AACA,UAAMC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE,KAAKb,aAAL,CAAmBc,YAAnB,CAAgCZ,IAAhC;AADG,OAAhB;AAIA,WAAKJ,aAAL,CAAmBiB,WAAnB,CAA+BL,GAA/B,EAAoCF,OAApC,EAA6CI,OAA7C,EAAsDT,QAAtD;AACH","sourcesContent":["import { API } from './payment-types';\nimport PayloadMapper from './v1/payment-mappers/payload-mapper';\nimport RequestSender from '../common/http-request/request-sender';\nimport UrlHelper from './url-helper';\n\nexport default class PaymentSubmitter {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const payloadMapper = PayloadMapper.create();\n\n        return new PaymentSubmitter(urlHelper, requestSender, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     * @throws {Error}\n     */\n    submitPayment(data, callback) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== API) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getPaymentUrl();\n        const options = {\n            headers: this.payloadMapper.mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n}\n"],"file":"payment-submitter.js"}