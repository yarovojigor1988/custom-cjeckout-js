{"version":3,"sources":["../../../../src/payment/v2/payment-mappers/cart-mapper.js"],"names":["CartMapper","data","cart","currency_code","currency","items","mapToItems","totals","mapToOrderTotals","map","itemData","discount_amount","integerDiscount","name","price","integerAmount","unit_price","integerUnitPrice","quantity","sku","tax_amount","integerTax","amount","integerAmountAfterDiscount","type","mapToType","discount_total","discount","grand_total","grandTotal","shipping_total","shipping","subtotal","surcharge_total","handling","tax_total","taxTotal","types","ItemPhysicalEntity","ItemDigitalEntity","ItemGiftCertificateEntity"],"mappings":";;;;;;;AAAA;;;;;;;;IAEqBA,U;;;;;;;;AAQjB;AACJ;AACA;AACA;8BACcC,I,EAAM;AAAA,uBACUA,IADV,CACJC,IADI;AAAA,UACJA,IADI,2BACG,EADH;AAGZ,aAAO,oBAAQ;AACXC,QAAAA,aAAa,EAAED,IAAI,CAACE,QADT;AAEXC,QAAAA,KAAK,EAAE,KAAKC,UAAL,CAAgBL,IAAhB,CAFI;AAGXM,QAAAA,MAAM,EAAE,KAAKC,gBAAL,CAAsBP,IAAtB;AAHG,OAAR,CAAP;AAKH;AAED;AACJ;AACA;AACA;AACA;;;;+BACeA,I,EAAM;AAAA;;AAAA,wBACoBA,IADpB,CACLC,IADK;AAAA,UACLA,IADK,4BACE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OADF;AAGb,aAAOH,IAAI,CAACG,KAAL,CAAWI,GAAX,CAAe,UAACC,QAAD;AAAA,eAAc,oBAAQ;AACxCC,UAAAA,eAAe,EAAED,QAAQ,CAACE,eADc;AAExCC,UAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFyB;AAGxCC,UAAAA,KAAK,EAAEJ,QAAQ,CAACK,aAHwB;AAIxCC,UAAAA,UAAU,EAAEN,QAAQ,CAACO,gBAJmB;AAKxCC,UAAAA,QAAQ,EAAER,QAAQ,CAACQ,QALqB;AAMxCC,UAAAA,GAAG,EAAET,QAAQ,CAACS,GAN0B;AAOxCC,UAAAA,UAAU,EAAEV,QAAQ,CAACW,UAPmB;AAQxCC,UAAAA,MAAM,EAAEZ,QAAQ,CAACa,0BARuB;AASxCC,UAAAA,IAAI,EAAE,KAAI,CAACC,SAAL,CAAef,QAAf;AATkC,SAAR,CAAd;AAAA,OAAf,CAAP;AAWH;AAED;AACJ;AACA;AACA;AACA;;;;qCACqBT,I,EAAM;AAAA,wBACGA,IADH,CACXC,IADW;AAAA,UACXA,IADW,4BACJ,EADI;AAGnB,aAAO,oBAAQ;AACXwB,QAAAA,cAAc,EAAExB,IAAI,CAACyB,QAAL,GAAgBzB,IAAI,CAACyB,QAAL,CAAcZ,aAA9B,GAA8C,IADnD;AAEXa,QAAAA,WAAW,EAAE1B,IAAI,CAAC2B,UAAL,GAAkB3B,IAAI,CAAC2B,UAAL,CAAgBd,aAAlC,GAAkD,IAFpD;AAGXe,QAAAA,cAAc,EAAE5B,IAAI,CAAC6B,QAAL,GAAgB7B,IAAI,CAAC6B,QAAL,CAAchB,aAA9B,GAA8C,IAHnD;AAIXiB,QAAAA,QAAQ,EAAE9B,IAAI,CAAC8B,QAAL,GAAgB9B,IAAI,CAAC8B,QAAL,CAAcjB,aAA9B,GAA8C,IAJ7C;AAKXkB,QAAAA,eAAe,EAAE/B,IAAI,CAACgC,QAAL,GAAgBhC,IAAI,CAACgC,QAAL,CAAcnB,aAA9B,GAA8C,IALpD;AAMXoB,QAAAA,SAAS,EAAEjC,IAAI,CAACkC,QAAL,GAAgBlC,IAAI,CAACkC,QAAL,CAAcrB,aAA9B,GAA8C;AAN9C,OAAR,CAAP;AAQH;AAED;AACJ;AACA;AACA;AACA;;;;8BACcL,Q,EAAU;AAChB,UAAM2B,KAAK,GAAG;AACVC,QAAAA,kBAAkB,EAAE,UADV;AAEVC,QAAAA,iBAAiB,EAAE,SAFT;AAGVC,QAAAA,yBAAyB,EAAE;AAHjB,OAAd;AAMA,aAAOH,KAAK,CAAC3B,QAAQ,CAACc,IAAV,CAAZ;AACH;;;;AAzED;AACJ;AACA;6BACoB;AACZ,aAAO,IAAIxB,UAAJ,EAAP;AACH","sourcesContent":["import { omitNil } from '../../../common/utils';\n\nexport default class CartMapper {\n    /**\n     * @returns {CartMapper}\n     */\n    static create() {\n        return new CartMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCart(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            currency_code: cart.currency,\n            items: this.mapToItems(data),\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object[]}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map((itemData) => omitNil({\n            discount_amount: itemData.integerDiscount,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n            tax_amount: itemData.integerTax,\n            amount: itemData.integerAmountAfterDiscount,\n            type: this.mapToType(itemData),\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            discount_total: cart.discount ? cart.discount.integerAmount : null,\n            grand_total: cart.grandTotal ? cart.grandTotal.integerAmount : null,\n            shipping_total: cart.shipping ? cart.shipping.integerAmount : null,\n            subtotal: cart.subtotal ? cart.subtotal.integerAmount : null,\n            surcharge_total: cart.handling ? cart.handling.integerAmount : null,\n            tax_total: cart.taxTotal ? cart.taxTotal.integerAmount : null,\n        });\n    }\n\n    /**\n     * @private\n     * @param {Object} itemData\n     * @returns {Object}\n     */\n    mapToType(itemData) {\n        const types = {\n            ItemPhysicalEntity: 'physical',\n            ItemDigitalEntity: 'digital',\n            ItemGiftCertificateEntity: 'gift_card',\n        };\n\n        return types[itemData.type];\n    }\n}\n"],"file":"cart-mapper.js"}