{"version":3,"sources":["../../../../src/payment/v2/payment-mappers/client-token-mapper.js"],"names":["ClientTokenMapper","cartMapper","CartMapper","create","gatewayMapper","GatewayMapper","quoteMapper","QuoteMapper","storeMapper","StoreMapper","data","cart","mapToCart","gateway","mapToGateway","quote","mapToQuote","store","mapToStore"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,iB;;;;AACjB;AACJ;AACA;6BACoB;AACZ,UAAMC,UAAU,GAAGC,oBAAWC,MAAX,EAAnB;;AACA,UAAMC,aAAa,GAAGC,uBAAcF,MAAd,EAAtB;;AACA,UAAMG,WAAW,GAAGC,qBAAYJ,MAAZ,EAApB;;AACA,UAAMK,WAAW,GAAGC,qBAAYN,MAAZ,EAApB;;AAEA,aAAO,IAAIH,iBAAJ,CAAsBC,UAAtB,EAAkCG,aAAlC,EAAiDE,WAAjD,EAA8DE,WAA9D,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;AACI,6BAAYP,UAAZ,EAAwBG,aAAxB,EAAuCE,WAAvC,EAAoDE,WAApD,EAAiE;AAAA;;AAC7D;AACR;AACA;AACA;AACQ,SAAKP,UAAL,GAAkBA,UAAlB;AAEA;AACR;AACA;AACA;;AACQ,SAAKG,aAAL,GAAqBA,aAArB;AAEA;AACR;AACA;AACA;;AACQ,SAAKE,WAAL,GAAmBA,WAAnB;AAEA;AACR;AACA;AACA;;AACQ,SAAKE,WAAL,GAAmBA,WAAnB;AACH;AAED;AACJ;AACA;AACA;;;;;qCACqBE,I,EAAM;AACnB,aAAO,oBAAQ;AACXC,QAAAA,IAAI,EAAE,KAAKV,UAAL,CAAgBW,SAAhB,CAA0BF,IAA1B,CADK;AAEXG,QAAAA,OAAO,EAAE,KAAKT,aAAL,CAAmBU,YAAnB,CAAgCJ,IAAhC,CAFE;AAGXK,QAAAA,KAAK,EAAE,KAAKT,WAAL,CAAiBU,UAAjB,CAA4BN,IAA5B,CAHI;AAIXO,QAAAA,KAAK,EAAE,KAAKT,WAAL,CAAiBU,UAAjB,CAA4BR,IAA5B;AAJI,OAAR,CAAP;AAMH","sourcesContent":["import { omitNil } from '../../../common/utils';\nimport CartMapper from './cart-mapper';\nimport GatewayMapper from './gateway-mapper';\nimport QuoteMapper from './quote-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class ClientTokenMapper {\n    /**\n     * @returns {ClientTokenMapper}\n     */\n    static create() {\n        const cartMapper = CartMapper.create();\n        const gatewayMapper = GatewayMapper.create();\n        const quoteMapper = QuoteMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new ClientTokenMapper(cartMapper, gatewayMapper, quoteMapper, storeMapper);\n    }\n\n    /**\n     * @param {CartMapper} cartMapper\n     * @param {GatewayMapper} gatewayMapper\n     * @param {QuoteMapper} quoteMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(cartMapper, gatewayMapper, quoteMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CartMapper}\n         */\n        this.cartMapper = cartMapper;\n\n        /**\n         * @private\n         * @type {GatewayMapper}\n         */\n        this.gatewayMapper = gatewayMapper;\n\n        /**\n         * @private\n         * @type {QuoteMapper}\n         */\n        this.quoteMapper = quoteMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToClientToken(data) {\n        return omitNil({\n            cart: this.cartMapper.mapToCart(data),\n            gateway: this.gatewayMapper.mapToGateway(data),\n            quote: this.quoteMapper.mapToQuote(data),\n            store: this.storeMapper.mapToStore(data),\n        });\n    }\n}\n"],"file":"client-token-mapper.js"}