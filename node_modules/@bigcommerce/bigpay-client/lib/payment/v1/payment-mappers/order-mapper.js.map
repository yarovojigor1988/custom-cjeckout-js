{"version":3,"sources":["../../../../src/payment/v1/payment-mappers/order-mapper.js"],"names":["OrderMapper","data","order","billing_address","mapToBillingAddress","coupons","mapToCoupons","currency","id","orderId","items","mapToItems","shipping","mapToShipping","shipping_address","mapToShippingAddress","token","totals","mapToOrderTotals","customer","address","mapToAddress","email","shippingOption","description","transitTime","method","transit_time","coupon","map","code","addressKey","city","company","country_code","countryCode","country","first_name","firstName","last_name","lastName","phone","state_code","provinceCode","state","province","street_1","addressLine1","street_2","addressLine2","zip","postCode","cart","itemData","variant_id","variantId","name","price","integerAmount","unit_price","integerUnitPrice","quantity","sku","grand_total","grandTotal","handling","subtotal","tax","taxTotal"],"mappings":"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","sourcesContent":["import { omitEmptyStringAndNil, omitNil, toString } from '../../../common/utils';\n\nexport default class OrderMapper {\n    /**\n     * @returns {OrderMapper}\n     */\n    static create() {\n        return new OrderMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrder(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            billing_address: this.mapToBillingAddress(data),\n            coupons: this.mapToCoupons(data),\n            currency: order.currency,\n            id: order.orderId ? toString(order.orderId) : null,\n            items: this.mapToItems(data),\n            shipping: this.mapToShipping(data),\n            shipping_address: this.mapToShippingAddress(data),\n            token: order.token,\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        const { customer = {} } = data;\n        const address = this.mapToAddress(data, 'billingAddress');\n\n        if (customer.email) {\n            address.email = customer.email;\n        }\n\n        return address;\n    }\n\n    /**\n     * @private\n     * @param  {PaymentRequestData} data\n     * @return {Shipping[]}\n     */\n    mapToShipping(data) {\n        const { description, transitTime } = data.shippingOption || {};\n\n        if (description) {\n            return [omitEmptyStringAndNil({\n                method: description,\n                transit_time: transitTime,\n            })];\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Coupon[]}\n     */\n    mapToCoupons({ order = {} }) {\n        if (order.coupon && order.coupon.coupons) {\n            return order.coupon.coupons.map(({ code }) => ({ code }));\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n\n        return omitEmptyStringAndNil({\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            country: address.country,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            state_code: address.provinceCode,\n            state: address.province,\n            street_1: address.addressLine1,\n            street_2: address.addressLine2,\n            zip: address.postCode,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map((itemData) => omitNil({\n            code: itemData.id,\n            variant_id: itemData.variantId,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,\n            handling: order.handling ? order.handling.integerAmount : null,\n            shipping: order.shipping ? order.shipping.integerAmount : null,\n            subtotal: order.subtotal ? order.subtotal.integerAmount : null,\n            tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n        });\n    }\n}\n"],"file":"order-mapper.js"}